lines <- "data {
int <lower = 1> n;
vector[n] x;
vector[n] y;
real true_beta;
}
parameters {
real beta;
}
model {
y ~ normal(x * beta, 1);
beta ~ normal(0, 1);
}"
writeLines(lines, "x.stan")
tar_manifest()
library(targets)
library(stantargets)
tar_manifest()
tar_visnetwork(targets_only = TRUE)
tar_make()
tar_read(example_summary_x)
tar_make()
tar_read(custom_summary)
lines <- "data {
int <lower = 1> n;
vector[n] x;
vector[n] y;
}
parameters {
real beta;
}
model {
y ~ normal(x * beta, 1);
beta ~ normal(0, 1);
}
generated quantities {
array[n] real y_rep = normal_rng(x * beta, 1); // posterior predictive draws
}"
writeLines(lines, "gen.stan")
tar_manifest()
tar_visnetwork(targets_only = TRUE)
tar_make()
tar_read(postpred)
print(n = 30, tar_read(postpred))
print(n = 30, tar_read(postpred))
tar_manifest()
tar_visnetwork(targets_only = TRUE)
tar_make()
tar_read(custom_summary)
print(n = 30, tar_read(postpred))
tar_load(model)
tar_load(postpred)
postpred
tar_make()
lines <- "data {
int <lower = 1> n;
vector[n] x;
vector[n] y;
}
parameters {
vector[2] beta;
}
model {
y ~ normal(beta[1] + x * beta[2], 1);
beta ~ normal(0, 1);
}"
writeLines(lines, "model.stan")
tar_make()
tar_make()
tar_load(model)
model
model
getOption("repos")
usethis::create_from_github()
usethis::create_from_github("https://github.com/mfries1963/target_practice_stan.git", distdir = "~/R_projects/target_practice_stan")
usethis::create_from_github("https://github.com/mfries1963/target_practice_stan.git", destdir = "~/R_projects/target_practice_stan")
usethis::create_from_github("https://github.com/mfries1963/target_practice_stan.git", destdir = "~/R_projects/")
usethis::create_from_github("https://github.com/mfries1963/target_practice_stan.git", destdir = "~/R_projects/")
